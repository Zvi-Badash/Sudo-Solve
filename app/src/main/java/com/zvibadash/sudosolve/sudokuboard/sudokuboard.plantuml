@startuml

title __SUDOKUBOARD's Class Diagram__\n

  namespace com.zvibadash.sudosolve {
    namespace sudokuboard {
      class com.zvibadash.sudosolve.sudokuboard.SudokuBoardView {
          + board : SudokuDigit[][]
          + erroneousCells : HashSet<SudokuCoordinatesHolder>
          + selectedColumn : int
          + selectedRow : int
          + shouldCelebrate : Boolean
          + shouldDrawErrors : Boolean
          - cellSize : int
          - errorColor : int
          - filledColor : int
          - height : int
          - highlightedColor : int
          - highlightedPaint : Paint
          - hintColor : int
          - isEditable : boolean
          - lessHighlightedColor : int
          - letterPaint : Paint
          - lineColor : int
          - linePaint : Paint
          - textSize : int
          - width : int
          + SudokuBoardView()
          + celebrate()
          + clearAllFilled()
          + clearDigitInSelected()
          + fillDigitInSelected()
          + getBoardAsString()
          + magicFillSelected()
          + onTouchEvent()
          + requestAndPrepareSolve()
          + setBoardFromArray()
          + setBoardFromString()
          + setDigitHintInSelected()
          + setDigitInSelected()
          + unselect()
          # onDraw()
          # onSizeChanged()
          - _drawGrid()
          - _drawNumbers()
          - _drawSelected()
          - _getColorFromType()
          - _highlightCell()
          - _init()
      }
    }
  }
  

  namespace com.zvibadash.sudosolve {
    namespace sudokuboard {
      class com.zvibadash.sudosolve.sudokuboard.SudokuCoordinatesHolder {
          ~ col : int
          ~ row : int
          + SudokuCoordinatesHolder()
          + equals()
          + hashCode()
          + toString()
      }
    }
  }
  

  namespace com.zvibadash.sudosolve {
    namespace sudokuboard {
      class com.zvibadash.sudosolve.sudokuboard.SudokuDigit {
          - digit : int
          + SudokuDigit()
          + getDigit()
          + getType()
          + setDigit()
          + setType()
      }
    }
  }
  

  namespace com.zvibadash.sudosolve {
    namespace sudokuboard {
      enum SudokuDigitType {
        EMPTY
        ERROR
        FILLED
        HINTED
      }
    }
  }
  

  namespace com.zvibadash.sudosolve {
    namespace sudokuboard {
      abstract class com.zvibadash.sudosolve.sudokuboard.SudokuLogic {
          {static} + getErroneousCells()
      }
    }
  }
  

  com.zvibadash.sudosolve.sudokuboard.SudokuBoardView -up-|> android.view.View
  com.zvibadash.sudosolve.sudokuboard.SudokuDigit o-- com.zvibadash.sudosolve.sudokuboard.SudokuDigitType : type

@enduml
